version: "3.9"

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    volumes:
      - ./packages/frontend:/packages/frontend
    tty: true
    ports:
      - 3000:3000
    depends_on:
      - server
    command: yarn dev

  storybook:
    container_name: storybook
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    volumes:
      - ./packages/frontend:/packages/frontend
    tty: true
    ports:
      - 6006:6006
    environment:
      - NODE_ENV=development
    command: yarn storybook

  server:
    container_name: server
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    tty: true
    ports:
      - 3001:3000
    volumes:
      - ./packages/backend:/packages/backend
    command: yarn start:dev

  prisma:
    container_name: prisma
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    tty: true
    ports:
      - 5555:5555
    volumes:
      - ./packages/backend:/packages/backend
    command: yarn start:prisma

  db:
    container_name: db
    image: postgres:15-alpine
    ports:
      - 5432:5432
    volumes:
      - ./db/init.d:/docker-entrypoint-initdb.d
      - ./db/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
      POSTGRES_DB: ${POSTGRES_DB}
    hostname: postgres
    restart: always
    user: root
